version: "3.8"
services:
  nginx:
    image: nginx:alpine
    container_name: project-nginx
    restart: unless-stopped
    tty: true
    ports:
      - 8080:80
      - 443:443
#    depends_on:
#      - php
#      - mysql
#      - elasticsearch
#      - kibana
    networks:
      - backend
    links:
      - php
      - mysql
#      - elasticsearch
    volumes:
      - ./code/:/var/www/html/
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      #      - './nginx/nginx.conf:/etc/nginx/nginx.conf:ro'
      - ./logs/nginx/nginx-error.log:/var/log/nginx/error.log
      - ./logs/nginx/nginx-access.log:/var/log/nginx/access.log

  php:
    container_name: project-php
    build:
      args:
        user: admin
        uid: 1000
      context: ./php/
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - ./code/:/var/www/html/
      - ./php/php.ini:/usr/local/etc/php/php.ini
#    depends_on:
#      - mysql
#      - elasticsearch
#      - kibana

#  apache:
#    container_name: project-apache
#    build: './apache/'
#    restart: unless-stopped
#    depends_on:
#      - php
#      - mysql
#    networks:
#      - frontend
#      - backend
#    ports:
#      - 8080:80
#    volumes:
#      - ./code/:/var/www/html/
#      - ./apache/httpd.conf:/usr/local/apache2/conf/httpd.conf

  mysql:
    container_name: project-db
    image: mysql:8.0.22
    restart: unless-stopped
    networks:
      - backend
    environment:
#      MYSQL_HOST: ${DB_HOST}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - .mysql:/var/lib/mysql
    ports:
      - ${DB_PORT}:3306

  adminer:
    image: adminer:4.7.7-standalone
    container_name: project-adminer
    restart: unless-stopped
    ports:
      - 8081:8080
    depends_on:
      - mysql
    networks:
      - backend

#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
#    container_name: project-elasticsearch
#    networks:
#      - backend
#    ports:
#      - 9200:9200
#      - 9300:9300
#    environment:
#      - bootstrap.memory_lock=true
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#      - "discovery.zen.ping.unicast.hosts=elasticsearch"
#      - "xpack.security.enabled=false"
##      - node.name=project
##      - cluster.name=docker-cluster
##      - cluster.initial_master_nodes=project
#      - http.cors.enabled=true
#      - http.cors.allow-origin=*
#      - network.host=_eth0_
#    ulimits:
#      nproc: 65535
#      memlock:
#        soft: -1
#        hard: -1
#      nofile:
#        soft: 65536
#        hard: 65536
#    volumes:
#      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
#      - ./logs/elasticsearch/:/usr/share/elasticsearch/logs
#      - ./elasticsearch/data/:/usr/share/elasticsearch/data
#    links:
#      - mysql
#    depends_on:
#      - mysql
#  kibana:
#    image: docker.elastic.co/kibana/kibana:7.9.3
#    container_name: project-kibana
#    networks:
#      - backend
#    volumes:
#      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
#    links:
#      - elasticsearch
#      - mysql
#    depends_on:
#      - elasticsearch
#      - mysql
##    environment:
##      ELASTICSEARCH_URL: http://elasticsearch:9200
##      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
#    ports:
#      - 5601:5601
networks:
  backend:
    driver: bridge
